package com.shenmintech.cbp.biz.impl;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.shenmintech.base.template.IdWorkerTemplate;
import com.shenmintech.cbp.biz.ICompanyBiz;
import com.shenmintech.cbp.biz.vo.ques.Req4PostCompanyVo;
import com.shenmintech.cbp.biz.vo.ques.Req4PutComVo;
import com.shenmintech.cbp.biz.vo.res.Res4GetComVo;
import com.shenmintech.cbp.biz.vo.res.Sons4GetComVo;
import com.shenmintech.cbp.controller.bean.req.Req4GetComBean;
import com.shenmintech.cbp.controller.bean.req.Req4PostCompanyBean;
import com.shenmintech.cbp.controller.bean.req.Req4PutComBean;
import com.shenmintech.cbp.controller.bean.res.Res4GetComBean;
import com.shenmintech.cbp.controller.bean.res.Res4PostCompanyBean;
import com.shenmintech.cbp.controller.bean.res.Res4PutComBean;
import com.shenmintech.cbp.controller.bean.res.Sons4GetComBean;
import com.shenmintech.cbp.exception.ApplicationException;
import com.shenmintech.cbp.service.ICompanyService;
import com.shenmintech.cbp.service.ICourseService;
import com.shenmintech.cbp.service.IEmpolyeeService;
import com.shenmintech.common.util.DateUtil;
import com.shenmintech.common.util.StringUtil;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Component
@SuppressWarnings("static-access")
public class CompanyBizImpl implements ICompanyBiz {
	
	@Autowired
	ICompanyService iCompanyService;
	
	@Autowired
	ICourseService iCourseService;
	
	@Autowired
	IdWorkerTemplate idWorkerTemplate;
	
	@Autowired
	IEmpolyeeService iEmpolyeeService;
	
	@Override
	public Res4PostCompanyBean addCompany(Req4PostCompanyBean req4PostCompanyBean) {
		Res4PostCompanyBean res4PostCompanyBean = new Res4PostCompanyBean();
		/*bean结构校验*/
		String companyName = req4PostCompanyBean.getCompanyName();
		String estimatedStudentsNum = req4PostCompanyBean.getEstimatedStudentsNum();
		if(StringUtil.checkBlank(companyName,estimatedStudentsNum)){
			res4PostCompanyBean.setError(-1);
			res4PostCompanyBean.setMsg("companyName,estimatedStudentsNum不能为空");
			res4PostCompanyBean.setSuccess(false);
			return res4PostCompanyBean;
		}
		int estimatedStudentsNumber = 0;
		try {
			estimatedStudentsNumber = Integer.parseInt(estimatedStudentsNum);
		} catch (Exception e) {
			log.error("context", e);
			res4PostCompanyBean.setError(-1);
			res4PostCompanyBean.setMsg(e.getMessage());
			res4PostCompanyBean.setSuccess(false);
			return res4PostCompanyBean;
		}
		String id = idWorkerTemplate.generateId();//主键生成
		Req4PostCompanyVo companyVo = new Req4PostCompanyVo().builder()
				.id(id)
				.companyName(companyName)
				.estimatedStudentsNum(estimatedStudentsNumber)
				.build();
		List<Req4PostCompanyVo> list = new ArrayList<>();
		list.add(companyVo);
		try {
			iCompanyService.add(list);
		} catch (ApplicationException e) {
			log.error("context", e);
			res4PostCompanyBean.setError(-1);
			res4PostCompanyBean.setMsg(e.msg);
			res4PostCompanyBean.setSuccess(false);
			return res4PostCompanyBean;
		}
		res4PostCompanyBean.setError(0);
		res4PostCompanyBean.setMsg("添加成功");
		res4PostCompanyBean.setSuccess(true);
		return res4PostCompanyBean;
	}

	@Override
	public Res4PutComBean updateCompany(Req4PutComBean req4PutComBean) {
		Res4PutComBean res4PutComBean = new Res4PutComBean();
		String companyId = req4PutComBean.getId();
		if(StringUtil.isBlank(companyId)) {
			res4PutComBean.setError(-1);
			res4PutComBean.setMsg("companyId不能为空");
			res4PutComBean.setSuccess(false);
			return res4PutComBean;
		}
		String companyName = req4PutComBean.getCompanyName();
		String esStudentNum = req4PutComBean.getEstimatedStudentsNum();
		Integer esStudentNumber = null;
		if(null != esStudentNum){
			try {
				esStudentNumber = Integer.parseInt(esStudentNum);
			} catch (Exception e) {
				log.error("context", e);
				res4PutComBean.setError(-1);
				res4PutComBean.setMsg(e.getMessage());
				res4PutComBean.setSuccess(false);
				return res4PutComBean;
			}
		}
		Req4PutComVo putComVo = new Req4PutComVo().builder()
				.id(companyId)
				.companyName(companyName)
				.estimatedStudentsNum(esStudentNumber)
				.build();
		try {
			iCompanyService.update(putComVo);;
		} catch (ApplicationException e) {
			log.error("context", e);
			res4PutComBean.setError(-1);
			res4PutComBean.setMsg(e.msg);
			res4PutComBean.setSuccess(false);
			return res4PutComBean;
		}
		res4PutComBean.setError(0);
		res4PutComBean.setMsg("SUCCESS");
		res4PutComBean.setSuccess(true);
		return res4PutComBean;
	}

	@Override
	public Res4GetComBean selectCompany(Req4GetComBean req4GetComBean) {
		Res4GetComBean res4GetComBean = new Res4GetComBean();
		int pageNo = -1==req4GetComBean.getPageNo()?1:req4GetComBean.getPageNo();
		int rowsPerPage = -1==req4GetComBean.getPageNo()?99999:req4GetComBean.getRowsPerPage();
		Res4GetComVo res4GetComVo = new Res4GetComVo();
		try {
			res4GetComVo = iCompanyService.select(pageNo,rowsPerPage);
		} catch (ApplicationException e) {
			log.error("context", e);
			res4GetComBean.setError(-1);
			res4GetComBean.setMsg(e.msg);
			res4GetComBean.setSuccess(false);
			return res4GetComBean;
		}
		
		List<Sons4GetComVo> sons4GetComVos = res4GetComVo.getList();
		Iterator<Sons4GetComVo> it = sons4GetComVos.iterator();
		List<Sons4GetComBean> list = new ArrayList<>();
		while (it.hasNext()) {
			Sons4GetComBean sons4GetComBean = new Sons4GetComBean();
			Sons4GetComVo sons4GetComVo = it.next();
			String id = sons4GetComVo.getId();
			sons4GetComBean.setCompanyId(id);
			String companyName = sons4GetComVo.getCompanyName();
			sons4GetComBean.setCompanyName(companyName);
			Date createTime = sons4GetComVo.getCreateTime();
			String createTimeStr = DateUtil.format(createTime, DateUtil.DATETYPE_4);
			sons4GetComBean.setCreateTime(createTimeStr);
			int count = iCourseService.countByCompanyId(id);
			sons4GetComBean.setCourseNum(String.valueOf(count));
			int estimatedStudentsNum = sons4GetComVo.getEstimatedStudentsNum();
			sons4GetComBean.setEstimatedStudentsNum(String.valueOf(estimatedStudentsNum));
			int employeeNum = iEmpolyeeService.countByCompanyId(id);
			sons4GetComBean.setCurStudentsNum(String.valueOf(employeeNum));
			list.add(sons4GetComBean);
		}
		int recordCount = res4GetComVo.getRecordCount();
		res4GetComBean.setError(0);
		res4GetComBean.setMsg("SUCCESS");
		res4GetComBean.setSuccess(true);
		res4GetComBean.setPageNo(pageNo);
		res4GetComBean.setRecordCount(recordCount);
		res4GetComBean.setPageSumCount((recordCount+rowsPerPage-1)/rowsPerPage);
		res4GetComBean.setList(list);
		return res4GetComBean;
	}

}
