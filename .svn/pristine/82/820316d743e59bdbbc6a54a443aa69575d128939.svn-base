package com.shenmintech.cbp.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.shenmintech.cbp.biz.IRoomAndVideoBiz;
import com.shenmintech.cbp.controller.bean.req.NetEasyRoomCreateAccountAndAccidReq;
import com.shenmintech.cbp.controller.bean.req.NetEasyRoomCreateRoomReq;
import com.shenmintech.cbp.controller.bean.res.NetEasyRoomResponse;
import com.shenmintech.cbp.controller.bean.res.NetEasyUserResponse;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;


@RequestMapping("neteasy")
@Api(value = "网易相关api", description = "网易相关api")
@Controller
public class ChattingAndVideoController {

  @Autowired
  private IRoomAndVideoBiz iRoomAndVideoBiz;

  @RequestMapping(value = "neteasyRoom", method = RequestMethod.POST)
  @ResponseBody
  @ApiResponses(value = {@ApiResponse(code = 405, message = "invalid input")})
  @ApiOperation(notes = "创建聊天室，获取聊天室房间号", httpMethod = "POST", value = "创建聊天室，获取聊天室房间号 ")
  public NetEasyRoomResponse createNetEasyRoom(
      @ApiParam(required = true, value = "入参") @RequestBody NetEasyRoomCreateRoomReq req) {
    return iRoomAndVideoBiz.createNetEasyRoom(req);
  }


  @RequestMapping("neteasyAccountAndAccid")
  @ResponseBody
  @ApiResponses(value = {@ApiResponse(code = 405, message = "invalid input")})
  @ApiOperation(notes = "创建用户，获取用户id,token", httpMethod = "POST", value = "创建用户，获取用户id,token")
  public NetEasyUserResponse createAccountAndAccid(
      @ApiParam(required = true, value = "入参") @RequestBody NetEasyRoomCreateAccountAndAccidReq req) {
    return iRoomAndVideoBiz.createAccoutAndAccid(req.getOperatorUserId(), req.getUserName());
  }

}
