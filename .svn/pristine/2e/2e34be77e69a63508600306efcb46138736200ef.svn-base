package com.shenmintech.cbp.service.impl;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.shenmintech.cbp.biz.vo.res.Res4GetUserVo;
import com.shenmintech.cbp.exception.ApplicationException;
import com.shenmintech.cbp.service.IUserService;
import com.shenmintech.cbp.service.model.TUser;
import com.shenmintech.cbp.service.model.UserModel;
import com.shenmintech.common.util.Constants;
import com.shenmintech.common.util.GsonUtil;
import com.shenmintech.common.util.HttpUtils;

@Service
@Transactional
public class UserServiceImpl implements IUserService {

	@SuppressWarnings("deprecation")
	@Override
	public Res4GetUserVo selectByUserId(String userId) {
		Res4GetUserVo res4GetUserVo = new Res4GetUserVo();
		Map<String,String> map = new HashMap<>();
		map.put("id",userId);
		String jsonBodyStr = GsonUtil.gson.toJson(map);
		String result = HttpUtils.sendPost("http://192.168.1.211:8000/authority/queryUserById","",jsonBodyStr);
		UserModel userModel = GsonUtil.gson.fromJson(result, UserModel.class);
		if(0==userModel.getError()){
			TUser tUser = userModel.getUser();
			if(null!=tUser){
				String userName = tUser.getName();
				res4GetUserVo.setUserName(userName);
				String mobile = tUser.getMobile();
				res4GetUserVo.setUserMobile(mobile);
				Date registerDate = new Date(tUser.getCreateDate());
				res4GetUserVo.setRegisterDate(registerDate);
				return res4GetUserVo;
			}else{
				throw new ApplicationException(Constants.META_STATUS_CODE_D1,"id未在用户表内找到相关用户",Constants.BLANKSTR);
			}
		}else{
			throw new ApplicationException(Constants.META_STATUS_CODE_D1,"用户模块调用失败",Constants.BLANKSTR);
		}
		
	}

}
